// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnerChanged extends ethereum.Event {
  get params(): OwnerChanged__Params {
    return new OwnerChanged__Params(this);
  }
}

export class OwnerChanged__Params {
  _event: OwnerChanged;

  constructor(event: OwnerChanged) {
    this._event = event;
  }

  get platformId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PlatformCreated extends ethereum.Event {
  get params(): PlatformCreated__Params {
    return new PlatformCreated__Params(this);
  }
}

export class PlatformCreated__Params {
  _event: PlatformCreated;

  constructor(event: PlatformCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get platformId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class TokenAdded extends ethereum.Event {
  get params(): TokenAdded__Params {
    return new TokenAdded__Params(this);
  }
}

export class TokenAdded__Params {
  _event: TokenAdded;

  constructor(event: TokenAdded) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get platformId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  getOwner(_platformId: BigInt): Address {
    let result = super.call("getOwner", "getOwner(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_platformId)
    ]);

    return result[0].toAddress();
  }

  try_getOwner(_platformId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("getOwner", "getOwner(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_platformId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTokens(_platformId: BigInt): Array<BigInt> {
    let result = super.call("getTokens", "getTokens(uint256):(uint256[])", [
      ethereum.Value.fromUnsignedBigInt(_platformId)
    ]);

    return result[0].toBigIntArray();
  }

  try_getTokens(_platformId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall("getTokens", "getTokens(uint256):(uint256[])", [
      ethereum.Value.fromUnsignedBigInt(_platformId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddTokenCall extends ethereum.Call {
  get inputs(): AddTokenCall__Inputs {
    return new AddTokenCall__Inputs(this);
  }

  get outputs(): AddTokenCall__Outputs {
    return new AddTokenCall__Outputs(this);
  }
}

export class AddTokenCall__Inputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _platformId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddTokenCall__Outputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }
}

export class ChangeOwnerCall extends ethereum.Call {
  get inputs(): ChangeOwnerCall__Inputs {
    return new ChangeOwnerCall__Inputs(this);
  }

  get outputs(): ChangeOwnerCall__Outputs {
    return new ChangeOwnerCall__Outputs(this);
  }
}

export class ChangeOwnerCall__Inputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }

  get _platformId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ChangeOwnerCall__Outputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }
}

export class NewPlatformCall extends ethereum.Call {
  get inputs(): NewPlatformCall__Inputs {
    return new NewPlatformCall__Inputs(this);
  }

  get outputs(): NewPlatformCall__Outputs {
    return new NewPlatformCall__Outputs(this);
  }
}

export class NewPlatformCall__Inputs {
  _call: NewPlatformCall;

  constructor(call: NewPlatformCall) {
    this._call = call;
  }

  get _platformName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class NewPlatformCall__Outputs {
  _call: NewPlatformCall;

  constructor(call: NewPlatformCall) {
    this._call = call;
  }
}
